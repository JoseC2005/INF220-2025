# -*- coding: utf-8 -*-
"""Tarea0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EayyxvzeW6Thzg64HSx9N_66PRYs8OeD

## Autor: Jose Carlos Justiniano Montaño
Materia: Estructura de datos 1
"""

def dibujar_piramide(altura):
    """
    Dibujar una piramide en ASCII con una altura especificada.

    Parametros:
    altura(int): Numero de niveles de la piramide

    Retorna:
    Print: Imprime la piramide dependiendo de la altura especificada.
    """
    for i in range(1, altura + 1):
        espacios = " " * (altura - i)  # Calcula los espacios en blanco
        asteriscos = "*" * (2 * i - 1)  # Calcula la cantidad de asteriscos
        print(espacios + asteriscos)  # Imprime la concatenacion de ambos

# Ejecutar el codigo con altura n y usando buenas practicas en el codigo
if __name__ == "__main__":
    dibujar_piramide(10)

def dibujar_triangulo(altura):
    """
    Dibuja un triángulo en ASCII con solo los bordes.

    Parámetros:
    altura (int): Número de líneas del triángulo.

    Retorna:
    None: Imprime el triángulo en la consola.
    """
    for i in range(1, altura + 1):
        espacios = " " * (altura - i)  # Espacios iniciales para centrar

        if i == 1:
            print(espacios + "*")  # Vértice superior
        elif i == altura:
            print("*" * (2 * i - 1))  # Base del triángulo
        else:
            print(espacios + "*" + " " * (2 * i - 3) + "*")  # Lados del triángulo


# Dibujar triangulo usando buenas practicas de codigo
if __name__ == "__main__":
    dibujar_triangulo(10)

import sympy as sp


def resolver_ecuacion_diferencial():
    """
    Resuelve una ecuación diferencial homogénea de primer orden
    de la forma dy/dx = f(y/x) utilizando el método de separación de variables.

    Retorna:
    Solución general de la ecuación diferencial.
    """
    # Definir la variable independiente y la función dependiente
    x = sp.symbols("x")
    y = sp.Function("y")(x)  # y ahora es una función de x

    # Definir la ecuación diferencial homogénea: dy/dx = 3x^2
    ecuacion = sp.Eq(y.diff(x), 3 * x**2)

    # Resolver la ecuación diferencial
    solucion = sp.dsolve(ecuacion, y)

    return solucion


# Ejecutar el código y mostrar la solución
if __name__ == "__main__":
    solucion_general = resolver_ecuacion_diferencial()
    print("Solución general de la ecuación diferencial:")
    print(solucion_general)